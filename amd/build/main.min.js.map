{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["import $ from 'jquery';\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Repository from 'block_class_material/repository';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\n\n\nconst addItem = root => {\n    const triggerElement = root.find('#add_material');\n    triggerElement.off();\n    triggerElement.on('click', async event => {\n        event.preventDefault();\n\n        const modalForm = new ModalForm({\n            modalConfig: {\n                title: await getString('form_title', 'block_class_material'),\n            },\n            formClass: 'block_class_material\\\\form\\\\add_material',\n            saveButtonText: await getString('save', 'block_class_material'),\n            returnFocus: triggerElement,\n        });\n\n        modalForm.addEventListener(modalForm.events.SUBMIT_BUTTON_PRESSED, event => {\n            event.preventDefault();\n            $('input[name=\"cmid\"]').val(Number(root.data('course-module-id')));\n\n            if(modalForm.validateElements()) {\n                modalForm.submitFormAjax();\n            }\n        });\n\n        modalForm.show();\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, async event => {\n            await drawItem(root, event.detail);\n            Notification.addNotification({\n                message: await getString('upload_success', 'block_class_material'),\n                type: 'success',\n                closebutton: true,\n                annouce: true,\n            });\n        });\n    });\n};\n\nconst drawItem = async (root, data) => {\n    if(root.data('canedit')) {\n        data.canEdit = true;\n    }\n    const fileItemTemplate = await Templates.render('block_class_material/file-item', data);\n    root.find('.document-container').append(fileItemTemplate);\n    loadActions(root);\n};\n\nconst loadActions = root => {\n    const deleteButtons = root.find('.document-item-actions-button-delete');\n\n    deleteButtons.off();\n    deleteButtons.on('click', async event => {\n        event.preventDefault();\n        const target = $(event.currentTarget);\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.DELETE_CANCEL,\n            title: await getString('modal_delete_document_title', 'block_class_material'),\n            body: await getString('modal_delete_document_body', 'block_class_material'),\n        });\n        modal.getRoot().off();\n        modal.getRoot().on(\n            ModalEvents.delete,\n            async () => {\n                Repository.deleteFile({\n                    fileid: Number(target.data('delete-item'))\n                }).then(async response => {\n                    if(response.deleted) {\n                        root.find(`[data-item-id=\"${target.data('delete-item')}\"]`).remove();\n                        Notification.addNotification({\n                            message: await getString('delete_success', 'block_class_material'),\n                            type: 'success',\n                            closebutton: true,\n                            annouce: true,\n                        });\n                        return;\n                    }\n\n                    Notification.addNotification({\n                        message: await getString('delete_error', 'block_class_material'),\n                        type: 'error',\n                        closebutton: true,\n                        annouce: true,\n                    });\n                });\n            }\n        );\n        modal.show();\n    });\n};\n\nexport const init = async (root) => {\n    addItem(root);\n    loadActions(root);\n};"],"names":["drawItem","async","root","data","canEdit","fileItemTemplate","Templates","render","find","append","loadActions","deleteButtons","off","on","event","preventDefault","target","currentTarget","modal","ModalFactory","create","type","types","DELETE_CANCEL","title","body","getRoot","ModalEvents","delete","deleteFile","fileid","Number","then","response","deleted","remove","addNotification","message","closebutton","annouce","show","triggerElement","modalForm","ModalForm","modalConfig","formClass","saveButtonText","returnFocus","addEventListener","events","SUBMIT_BUTTON_PRESSED","val","validateElements","submitFormAjax","FORM_SUBMITTED","detail","addItem"],"mappings":"8yBAgDMA,SAAWC,MAAOC,KAAMC,QACvBD,KAAKC,KAAK,aACTA,KAAKC,SAAU,SAEbC,uBAAyBC,mBAAUC,OAAO,iCAAkCJ,MAClFD,KAAKM,KAAK,uBAAuBC,OAAOJ,kBACxCK,YAAYR,OAGVQ,YAAcR,aACVS,cAAgBT,KAAKM,KAAK,wCAEhCG,cAAcC,MACdD,cAAcE,GAAG,SAASZ,MAAAA,QACtBa,MAAMC,uBACAC,QAAS,mBAAEF,MAAMG,eACjBC,YAAcC,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,cACzBC,YAAa,mBAAU,8BAA+B,wBACtDC,WAAY,mBAAU,6BAA8B,0BAExDP,MAAMQ,UAAUd,MAChBM,MAAMQ,UAAUb,GACZc,sBAAYC,QACZ3B,8BACe4B,WAAW,CAClBC,OAAQC,OAAOf,OAAOb,KAAK,kBAC5B6B,MAAK/B,MAAAA,cACDgC,SAASC,eACRhC,KAAKM,8BAAuBQ,OAAOb,KAAK,sBAAoBgC,oCAC/CC,gBAAgB,CACzBC,cAAe,mBAAU,iBAAkB,wBAC3ChB,KAAM,UACNiB,aAAa,EACbC,SAAS,0BAKJH,gBAAgB,CACzBC,cAAe,mBAAU,eAAgB,wBACzChB,KAAM,QACNiB,aAAa,EACbC,SAAS,UAKzBrB,MAAMsB,yBAIMvC,MAAAA,OA1FJC,CAAAA,aACNuC,eAAiBvC,KAAKM,KAAK,iBACjCiC,eAAe7B,MACf6B,eAAe5B,GAAG,SAASZ,MAAAA,QACvBa,MAAMC,uBAEA2B,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTpB,YAAa,mBAAU,aAAc,yBAEzCqB,UAAW,2CACXC,qBAAsB,mBAAU,OAAQ,wBACxCC,YAAaN,iBAGjBC,UAAUM,iBAAiBN,UAAUO,OAAOC,uBAAuBpC,QAC/DA,MAAMC,qCACJ,sBAAsBoC,IAAIpB,OAAO7B,KAAKC,KAAK,sBAE1CuC,UAAUU,oBACTV,UAAUW,oBAIlBX,UAAUF,OAEVE,UAAUM,iBAAiBN,UAAUO,OAAOK,gBAAgBrD,MAAAA,cAClDD,SAASE,KAAMY,MAAMyC,8BACdnB,gBAAgB,CACzBC,cAAe,mBAAU,iBAAkB,wBAC3ChB,KAAM,UACNiB,aAAa,EACbC,SAAS,WA2DrBiB,CAAQtD,MACRQ,YAAYR"}